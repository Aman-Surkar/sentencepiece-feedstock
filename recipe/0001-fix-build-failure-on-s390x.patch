From a6d6cb87e01a7bea3f045149a78fa3050cb774da Mon Sep 17 00:00:00 2001
From: Aman-Surkar <aman_surkar@persistent.com>
Date: Thu, 28 Dec 2023 12:40:09 +0000
Subject: [PATCH] fix-build-failure-on-s390x

---
 src/normalizer.cc | 6 +++---
 src/normalizer.h  | 1 +
 2 files changed, 4 insertions(+), 3 deletions(-)

diff --git a/src/normalizer.cc b/src/normalizer.cc
index 2ab8084..eea4b49 100644
--- a/src/normalizer.cc
+++ b/src/normalizer.cc
@@ -265,7 +265,7 @@ std::string Normalizer::EncodePrecompiledCharsMap(
 #ifdef IS_BIG_ENDIAN
   uint32 *data = reinterpret_cast<uint32 *>(const_cast<char *>(blob.data()));
   for (int i = 0; i <= trie_blob.size() / 4; ++i)
-    data[i] = util::Swap32(data[i]);
+    data[i] = Swap32(data[i]);
 #endif
 
   return blob;
@@ -285,7 +285,7 @@ util::Status Normalizer::DecodePrecompiledCharsMap(
   }
 
 #ifdef IS_BIG_ENDIAN
-  trie_blob_size = util::Swap32(trie_blob_size);
+  trie_blob_size = Swap32(trie_blob_size);
 #endif
 
   if (trie_blob_size >= blob.size())
@@ -296,7 +296,7 @@ util::Status Normalizer::DecodePrecompiledCharsMap(
 #ifdef IS_BIG_ENDIAN
   buffer->assign(blob.data(), trie_blob_size);
   uint32 *data = reinterpret_cast<uint32 *>(const_cast<char *>(buffer->data()));
-  for (int i = 0; i < trie_blob_size / 4; ++i) data[i] = util::Swap32(data[i]);
+  for (int i = 0; i < trie_blob_size / 4; ++i) data[i] = Swap32(data[i]);
   *trie_blob = absl::string_view(buffer->data(), trie_blob_size);
 #else
   *trie_blob = absl::string_view(blob.data(), trie_blob_size);
diff --git a/src/normalizer.h b/src/normalizer.h
index c79813c..37fdb8a 100644
--- a/src/normalizer.h
+++ b/src/normalizer.h
@@ -22,6 +22,7 @@
 #include <vector>
 
 #include "common.h"
+#include "util.h"
 #include "sentencepiece_model.pb.h"
 #include "sentencepiece_processor.h"
 #include "third_party/absl/strings/string_view.h"
-- 
2.34.1

